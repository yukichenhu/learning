spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: mysql@2022
    url: jdbc:mysql://192.168.0.136:3306/test?rewriteBatchedStatements=true&serverTimezone=Asia/Shanghai
  jpa:
    generate-ddl: false
    database: mysql
    show-sql: true
    properties:
      hibernate:
        jdbc:
          batch_size: 100
          batch_versioned_data: true
        format_sql: true
        order_inserts: true
  servlet:
    multipart:
      max-file-size: 200MB
      max-request-size: 200MB
  kafka:
    bootstrap-servers: 192.168.0.5:9092
    producer: # 生产者
      retries: 1 # 设置大于 0 的值，则客户端会将发送失败的记录重新发送
      batch-size: 16384
      buffer-memory: 33554432
      acks: all
      # 指定消息key和消息体的编解码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: test
      enable-auto-commit: true
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 500
      security:
        protocol: SASL_PLAINTEXT
    jaas:
      enabled: true

worker-id: 2
leader-election:
  cron: "*/15 * * * * ?"
  timeout-sec: 20
  prefer-ips: 192.168.0,172.23

server:
  port: 8082
  servlet:
    context-path: /

minio:
  # 访问的url
  endpoint: http://192.168.0.136
  # API的端口
  port: 9001
  # 秘钥
  accessKey: YjKdaiJFzU06FkYQ
  secretKey: RBBzv3zVqwjJOed8iuBtPtOu6JEJXorS
  secure: false
  bucket-name: learning # 桶名 我这是给出了一个默认桶名
  image-size: 10485760 # 我在这里设定了 图片文件的最大大小
  file-size: 1073741824 # 此处是设定了文件的最大大小
